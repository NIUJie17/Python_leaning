1. 创建一个函数
  def 函数名 (参数列表)：
   ”函数注释“   这个部分是可选项
    函数功能
    return 如果函授有返回值可以用return语句返回

2. 形参和实参
   形式参数：在定义函数时，函数名后面括号中的参数为”形式参数“
   实际参数：在调用函数时，函数名后面括号中的参数为”实际参数“
   
   根据实际参数的类型不同，可以分为将实际参数的值传递给形式参数和将实际参数的引用传递给形式参数两种情况
   进行值传递时，改变形式参数的值后，实际参数的值不改变；在进行引用传递时，改变形式参数的值后，实际参数的值也发生改变
   
 3. 可变形式参数 形式参数的数量是可变的
 def fun_bmi_upgrade(*person):
    for list_item in person:
        for item in list_item:
            personname = item[0]
            height = item[1]
            weight = item[2]
            print("\n" + "=" * 13, personname, "=" * 13)
            print("身高:" + str(height) + str(weight))
            bmi = weight / (height * height)
            if bmi < 18.5:
                print("您的体重过轻")
            if bmi >= 18.5 and bmi < 24.9:
                print("您的体重过重")
            if bmi >= 29.9:
                print("肥胖")


list1 = [("niu", 1.75, 65), ("zhu", 1.78, 50), ("dai", 1.72, 66)]
list2 = [("niu", 1.75, 65), ("zhu", 1.78, 50)]
fun_bmi_upgrade(list1, list2)


4. return 返回值
   将函数的返回结果给一个变量，可以返回一个值，也可以返回多个值，如果是返回多个值，那么返回值返回的是一个***元组***

5. 局部变量与全局变量
   局部变量：在函数内部定义的变量只能在函数内部使用，随着函数执行的结束而消失
   全局变量：在函数外定义的变量，可以在函数中和函数外使用
   特殊全局变量：在函数内定义使用global修饰符，在函数外也能使用。
   
   注意：在函数内定义的局部变量，及时和函数外的全局变量重名，也互不影响。
        但是在函数内定义的全局变量，与函数重名的话，是可以改变函数外全局变量的值的。
        
        message = ”1“
        print(”原始值“ + message)
        def change():
          global message
          message = "2"
          print("现有的函数体内的值" + message)
          
        change()
        print("函数体外的值" + message)
        
        输出结果为： 1 2 2
        
6. 匿名函数 lambda
    匿名函数是指没有名字的函数，应用在一个函数
    函数格式为：
      result = lambda [arg1 [, arg2, ..., argn]]:expression
      result : 用于调用lambda表达式
      参数是用于指定要传递的参数列表
      expression: 用于指定一个实现具体功能的表达式。
      *********使用lambda表达式，参数是可以有多个的，但是表达式只能有一个。********
      
      例子：
  import math
  r = 10
  result = r : math.pi*r*r
  使用lambda表达式时，需要用一个变量去调用这个表达式
  

