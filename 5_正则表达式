1. 行定位符
    行定位符是用来描述字符串的边界的。   ^表示行的开始  $表示行的结尾
    
2. 元字符
    .   匹配除换行符外的任意字符
    \w  匹配字母，数字，下划线，汉字
    \W  匹配除字符，数字，下划线，汉字以外的字符
    \s  匹配单个的空白符
    \S  除单个空白符以外的所有字符
    \b  匹配单词的开始或结束，单词的分界符通常是空格，标点符号或换行   I like mr or am \bm与mr中的m相匹配，与am中的m不匹配
    \d  匹配数字    \d 可以与"m7ri"中的字符7匹配
    
3. 限定符
    使用\w*可以匹配任意数量的字母或数字
    如果匹配8位QQ号可以使用如下 ^\d{8}$
    
    ?   匹配前面的字符零次或一次
    +   匹配前面的字符1次或多次
    *   匹配前面的字符零次或多次
    {n} 匹配前面的字符n次
    {n,}匹配前面的字符至少n次
    {n,m}匹配前面的字符最少n次，最多m次
    
4. 字符类
    []用来描述一个范围
    例如[aeiou]用来匹配任何一个英文元音字母。
    [a-z0-9A-Z] 完全等同于 \w
    要想匹配给定字符串中任意一个汉字，可以使用[\u4e00-\u9fa5]， 如果要匹配连续多个汉字，则使用[\u4e00-\u9fa5]+

5. 排除字符
    [^a-zA-Z] 匹配一个不是字母的字符

6. 选择字符    需要使用  |    符号来实现，该字符可以理解为现实生活中的“或”。
    例如一个匹配身份证的表达式，身份证为15位或18位，最后一位为数字或X
    (^\d{15}$)|(^\d{18}$)|(^\d{17})(\d|X|x)$
    
7.转义字符串
    .可以匹配任意字符，但是当我们想需要匹配.的时候，需要使用\.
    
8. 分组  使用()
    (six|four)th    匹配sixth或者fourth
    (\.[0-9]{1,3}){3} 对(\.[0-9]{1,3})连续重复3次

9. 在Python中使用正则表达式语法
    在python中使用正则表达式，是将其作为模式字符串使用的
    匹配不是字母的一个字符的正则表达式的模式字符串是：
    '[^A-Za-z]'
    但是当我们用到大量的反斜杠和特殊字符时候，需要在反斜杠前再次加反斜杠
    所以需要在模式字符串前加上r或R
    例如 r'\bm\w*\b'
    
10. 使用re模块实现正则表达式的操作
    python提供了re模块用于实现正则表达式的操作
    需要使用 improt re 导入
    有search()方法，mathch()，findall()方法进行字符串处理，也可使用re模块的complie9)方法将模式字符串转化为正则表达式的对象，然后再使用该正则表达式对象的相关方法来操作字符串。
    
11. 匹配字符串
    - 使用match()方法进行匹配
      
    
